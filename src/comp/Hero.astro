<script is:inline>
const gotoWork = () =>
  setTimeout(() => {
    window.location.href = "/portfolio/about";
  }, 2000);

document.addEventListener("alpine:init", () => {
  Alpine.data("hero", () => ({
    init: "true",
    anim: "",
    last: "0",
    timer: "",
    animate(inOrOut) {
      const animDur = 2600;
      if (this.init) return;
      if (this.timer) clearTimeout(this.timer);
      if (this.anim === inOrOut) return;

      const t = Date.now();
      const since = t - this.last;
      if (since > animDur) {
        this.anim = inOrOut;
        this.last = t;
        gotoWork();
        return;
      }

      this.timer = setTimeout(() => {
        this.anim = inOrOut;
        this.last = t;
        gotoWork();
      }, animDur - since);
    },
  }));
});
</script>
<div
  x-data="hero"
  x-init="setTimeout(()=>{ anim='in'; init=false; last=Date.now() },800)"
>
  <header>
    <div class="hero">
      <div class="left"></div>
      <p class="tommy" :class=" anim + (init?' init' :'') ">
        <span class=""><span><span><span>T</span></span></span></span>
        <span class="o"><span class="hov">o</span></span>
        <span class="m1">
          <span style="--m: 0">
            <span style="--m: 1">
              <span style="--m: 2">
                <span style="--m: 3"> m</span>
              </span>
            </span>
          </span>
        </span>
        <span class="m2">
          <span style="--m: 0">
            <span style="--m: 1">
              <span style="--m: 2">
                <span style="--m: 3"> m</span>
              </span>
            </span>
          </span>
        </span>
        <span class="y"><span class="slide">y</span></span>
      </p>
      <div class="right"></div>
    </div>
  </header>
  <main class="flex items-center justify-center">
    <a
      href="/portfolio/about"
      class="bg-black text-white px-4 py-2 heading text-2xl"
      @click.prevent="animate('out');"
    >
      <span>Enter</span>
    </a>
  </main>
</div>

<style>
  .hero {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;

    height: 60vh;
    max-height: 500px;
    margin-top: 8vw;
  }

  .init {
    position: relative;
  }

  .left,
  .right {
    flex: 1;
    height: 100%;
    z-index: 2;
    --trans: 2.6em;
    --white: calc(var(--trans) + 2.9em);
  }
  .left {
    background: linear-gradient(
      to left,
      transparent var(--trans),
      var(--bg, #fff) var(--white)
    );
  }
  .right {
    background: linear-gradient(
      to right,
      transparent var(--trans),
      var(--bg, #fff) var(--white)
    );
  }

  .tommy {
    position: relative;
    /* font-family: "Roboto", sans-serif; */
    font-weight: 400;
    font-size: 15vw;
    line-height: 1;

    margin: 0;
    display: flex;
  }
  .tommy span {
    display: inline-block;
  }

  @keyframes m_roll_in {
    from {
      transform: rotate(-90deg);
    }
  }
  @keyframes m_roll_out {
    to {
      transform: rotate(-90deg);
    }
  }

  .m1 {
    --t-roll: 0.2s;
    --h-top: 32%;
    --h-bottom: 22%;
    --delay: 0s;
  }

  .init .m1 span {
    transform: rotate(-90deg);
  }

  .m1 > span {
    transform-origin: 0% calc(100% - var(--h-bottom));
  }
  .m1 > span > span {
    transform-origin: 0% var(--h-top);
  }
  .m1 > span > span > span {
    transform-origin: 100% var(--h-top);
  }
  .m1 > span > span > span > span {
    transform-origin: 100% calc(100% - var(--h-bottom));
  }

  .m1 span {
    --delay-out: calc(var(--m) * var(--t-roll) + var(--delay));
    --delay-in: calc((3 - var(--m)) * var(--t-roll) + var(--delay));
  }

  .in .m1 span {
    animation: m_roll_in var(--t-roll) var(--delay-in) ease-in-out both;
  }
  .out .m1 span {
    animation: m_roll_out var(--t-roll) var(--delay-out) ease-in-out both;
  }

  .m2 {
    --t-roll: 0.2s;
    --h-top: 32%;
    --h-bottom: 22%;
    --delay: 0.3s;
  }

  .init .m2 span {
    transform: rotate(90deg);
  }
  .m2 > span {
    transform-origin: 100% calc(100% - var(--h-bottom));
  }
  .m2 > span > span {
    transform-origin: 100% var(--h-top);
  }
  .m2 > span > span > span {
    transform-origin: 0% var(--h-top);
  }
  .m2 > span > span > span > span {
    transform-origin: 0% calc(100% - var(--h-bottom));
  }

  span {
    --delay-out: calc(var(--m) * var(--t-roll) + var(--delay));
    --delay-in: calc((3 - var(--m)) * var(--t-roll) + var(--delay));
  }

  .in .m2 span {
    animation: m2_roll_in var(--t-roll) var(--delay-in) ease-in-out both;
  }
  .out .m2 span {
    animation: m2_roll_out var(--t-roll) var(--delay-out) ease-in-out both;
  }

  @keyframes m2_roll_in {
    from {
      transform: rotate(90deg);
    }
  }
  @keyframes m2_roll_out {
    to {
      transform: rotate(90deg);
    }
  }

  .o {
    --tf-origin: 50% 50%;
    --dist-o: -3em;
    --ang-o: -850deg;

    transform-origin: var(--tf-origin);
  }

  .init .o {
    transform: translateX(var(--dist-o));
  }
  .in .o {
    animation: o_roll_in 1.6s 0.6s ease-in-out both;
  }
  .out .o {
    animation: o_roll_out 1.6s 0.3s ease-in-out both;
  }

  @keyframes o_roll_in {
    from {
      transform-origin: var(--tf-origin);
      transform: translateX(var(--dist-o)) rotate(var(--ang-o));
    }
  }
  @keyframes o_roll_out {
    to {
      transform-origin: var(--tf-origin);
      transform: translateX(var(--dist-o)) rotate(var(--ang-o));
    }
  }

  .o .hov {
    transform-origin: var(--tf-origin);
    transition: transform 0.3s ease-in-out;
  }
  .tommy.in:hover .o .hov {
    transform: rotate(60deg);
  }

  .y {
    --y-dist: 2em;
    --y-hop-s: -0.3em;
    --y-hop-l: -0.7em;

    --t-hop-s: 0.2s;
    --t-hop-l: 0.25s;

    --t-total: calc(6 * var(--t-hop-l) + 2 * var(--t-hop-s));
    --t-delay: 0.6s;

    --bounce-bezier: cubic-bezier(0, 0, 0.18, 1);
  }

  .init .y {
    transform: translateX(var(--y-dist));
  }
  .out .y {
    animation:
      y_bounce_out var(--t-hop-l) calc(2 * var(--t-hop-s) + var(--t-delay))
        var(--bounce-bezier) 6 alternate,
      y_bounce_out_s var(--t-hop-s) var(--t-delay) var(--bounce-bezier) 2
        alternate;
  }
  .out .y .slide {
    animation: y_slide_out var(--t-total) var(--t-delay) linear both;
  }
  .in .y {
    animation:
      y_bounce_in var(--t-hop-l) var(--t-delay) var(--bounce-bezier) 6 alternate,
      y_bounce_in_s var(--t-hop-s) calc(6 * var(--t-hop-l) + var(--t-delay))
        var(--bounce-bezier) 2 alternate;
  }
  .in .y .slide {
    animation: y_slide_in var(--t-total) var(--t-delay) linear both;
  }

  @keyframes y_bounce_out_s {
    to {
      transform: translateY(var(--y-hop-s));
    }
  }
  @keyframes y_bounce_in_s {
    to {
      transform: translateY(var(--y-hop-s));
    }
  }
  @keyframes y_bounce_out {
    to {
      transform: translateY(var(--y-hop-l));
    }
  }
  @keyframes y_bounce_in {
    to {
      transform: translateY(var(--y-hop-l));
    }
  }

  @keyframes y_slide_in {
    from {
      transform: translateX(var(--y-dist));
    }
  }
  @keyframes y_slide_out {
    to {
      transform: translateX(var(--y-dist));
    }
  }
</style>
